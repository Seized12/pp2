1)
def squares_generator(N):
    for i in range(N):
        yield i**2

N = 10
squares = squares_generator(N)

for square in squares:
    print(square)
2)
def even_numbers_generator(n):
    for i in range(n + 1):
        if i % 2 == 0:
            yield i

def main():
    try:
        n = int(input("Введите целое число n: "))
        if n < 0:
            print("Число должно быть положительным.")
            return
        even_numbers = even_numbers_generator(n)
        print("Четные числа от 0 до", n, ":", end=" ")
        for num in even_numbers:
            print(num, end=", " if num < n else "\n")
    except ValueError:
        print("Ошибка: Введено нецелое число.")

if __name__ == "__main__":
    main()
3)
def divisible_by_3_and_4_generator(n):
    for i in range(n + 1):
        if i % 3 == 0 and i % 4 == 0:
            yield i

def main():
    try:
        n = int(input("Введите целое число n: "))
        if n < 0:
            print("Число должно быть положительным.")
            return
        numbers_divisible_by_3_and_4 = divisible_by_3_and_4_generator(n)
        print("Числа, делящиеся на 3 и 4 в диапазоне от 0 до", n, ":", end=" ")
        for num in numbers_divisible_by_3_and_4:
            print(num, end=", " if num < n else "\n")
    except ValueError:
        print("Ошибка: Введено нецелое число.")

if __name__ == "__main__":
    main()

4)
def squares(a, b):
    for i in range(a, b + 1):
        yield i ** 2

a = 3
b = 7

print(f"Квадраты чисел от {a} до {b}:")
for square in squares(a, b):
    print(square)
5)
def numbers_from_n_to_0(n):
    while n >= 0:
        yield n
        n -= 1


n = 5

print(f"Числа от {n} до 0:")
for number in numbers_from_n_to_0(n):
    print(number)
